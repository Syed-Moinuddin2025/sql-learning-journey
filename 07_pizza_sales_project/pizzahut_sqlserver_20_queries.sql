
--ðŸ“˜ BASIC SQL SERVER QUERIES

-- 1. Total number of orders placed
SELECT COUNT(*) AS total_orders FROM orders;

-- 2. Total revenue from pizza sales
SELECT Round(SUM(od.quantity * p.price), 2) AS total_revenue
FROM order_details od
JOIN pizzas p ON od.pizza_id = p.pizza_id;

-- 3. Highest-priced pizza with name
SELECT TOP 1 pt.name, p.price
FROM pizza_types pt
JOIN pizzas p ON pt.pizza_type_id = p.pizza_type_id
ORDER BY p.price DESC;

-- 4. Most common pizza size ordered
SELECT TOP 1 p.size, COUNT(*) AS size_count
FROM pizzas p
JOIN order_details od ON od.pizza_id = p.pizza_id
GROUP BY p.size
ORDER BY size_count DESC;

-- 5. Top 5 most ordered pizza types
SELECT TOP 5 pt.name, SUM(od.quantity) AS total_quantity
FROM order_details od
JOIN pizzas p ON od.pizza_id = p.pizza_id
JOIN pizza_types pt ON p.pizza_type_id = pt.pizza_type_id
GROUP BY pt.name
ORDER BY total_quantity DESC;

-- 6. Total quantity per pizza category
SELECT pt.category, SUM(od.quantity) AS total_quantity
FROM order_details od
JOIN pizzas p ON od.pizza_id = p.pizza_id
JOIN pizza_types pt ON pt.pizza_type_id = p.pizza_type_id
GROUP BY pt.category;

-- 7. Total revenue per category
SELECT pt.category, SUM(od.quantity * p.price) AS revenue
FROM order_details od
JOIN pizzas p ON od.pizza_id = p.pizza_id
JOIN pizza_types pt ON pt.pizza_type_id = p.pizza_type_id
GROUP BY pt.category;

-- 8. Total pizzas ordered per day
SELECT o.date, SUM(od.quantity) AS daily_total
FROM orders o
JOIN order_details od ON o.order_id = od.order_id
GROUP BY o.date
ORDER BY o.date;

-- 9. Orders per hour
SELECT DATEPART(HOUR, o.time) AS order_hour, COUNT(*) AS orders_per_hour
FROM orders o
GROUP BY DATEPART(HOUR, o.time)
ORDER BY order_hour;

-- 10. Count of unique pizza types
SELECT COUNT(DISTINCT name) AS unique_pizzas FROM pizza_types;


-- ðŸ“— NORMAL LEVEL SQL SERVER QUERIES (JOIN + AGGREGATION)

-- 11. List all pizza types with their categories
SELECT name, category FROM pizza_types;

-- 12. Total number of pizzas sold (sum of quantity)
SELECT SUM(quantity) AS total_pizzas_sold FROM order_details;

-- 13. Pizza with lowest price
SELECT TOP 1 pt.name, p.price
FROM pizza_types pt
JOIN pizzas p ON pt.pizza_type_id = p.pizza_type_id
ORDER BY p.price ASC;

-- 14. Quantity of each pizza_id sold
SELECT pizza_id, SUM(quantity) AS quantity_sold
FROM order_details
GROUP BY pizza_id
ORDER BY quantity_sold DESC;

-- 15. Average price of pizzas by size
SELECT size, AVG(price) AS avg_price FROM pizzas GROUP BY size;

-- 16. Daily revenue generated
SELECT o.date, SUM(od.quantity * p.price) AS daily_revenue
FROM orders o
JOIN order_details od ON o.order_id = od.order_id
JOIN pizzas p ON p.pizza_id = od.pizza_id
GROUP BY o.date
ORDER BY o.date;

-- 17. List of all pizza sizes used
SELECT DISTINCT size FROM pizzas;

-- 18. Revenue generated by each pizza type
SELECT pt.name, SUM(od.quantity * p.price) AS revenue
FROM order_details od
JOIN pizzas p ON od.pizza_id = p.pizza_id
JOIN pizza_types pt ON pt.pizza_type_id = p.pizza_type_id
GROUP BY pt.name
ORDER BY revenue DESC;

-- 19. Total revenue and quantity for each category
SELECT pt.category, SUM(od.quantity) AS total_qty, SUM(od.quantity * p.price) AS total_rev
FROM order_details od
JOIN pizzas p ON p.pizza_id = od.pizza_id
JOIN pizza_types pt ON pt.pizza_type_id = p.pizza_type_id
GROUP BY pt.category;

-- 20. Average quantity per order
SELECT AVG(quantity) AS avg_qty_per_order FROM order_details;


